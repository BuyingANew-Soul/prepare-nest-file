1. Read the files for sizes
    -> save and create svg using SVGjs and push into an array
2. Get specified elements for each sizes
3. Make copy for specified quantity of an element
4. Put all of them into an SVG document 
5. Calculate bbox() for element
6. feed the bbox coordinate and dimensions to the sorting program



Issues:
#1 How to handle duplicate ids?   = need to add the size info in the ids somehow
#2 


Width calculation:
1. keep track of the total width of the elements placing
2. if the width equals or just under a critical value, break and start a new row
3. 




file structure

--> There is a <!DOCTYPE at the begining of the files, removing that during readingSvg
<svg>
    <g id="someid">
        <g style>
            <g id="element1_outline"></g>
            <g id="element1_base"></g>
            <g id="element1_other"></g>
            <g id="element2_outline"></g>
            <g id="element2_base"></g>
            <g id="element2_other"></g>
            <g id="element2_ootheree"></g>
        </g>
    </g>
    <g id="someid">contains image</g>
    <g id="someid">contains image</g>
    <g id="someid">contains Text</g>
</svg>


possible solutions
--> find the element by id
--> prepare only the outlines (that's easy)
--> prepare the element with all the designs associate (need to figure out)
